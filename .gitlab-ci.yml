stages:
  - build-test
  - publish
  - installer
  - integration-test
  - integration-test--execution--1
  - integration-test--execution--2
  - integration-test--execution--3
  - integration-test--execution--4
  - integration-test--execution--5
  - integration-test--execution--6
  - integration-test--execution--7
  - integration-test--execution--8
  - integration-test--execution--9
  - integration-test--execution--10
  - integration-test--execution--11
  - integration-test--execution--12
  - integration-test--execution--13
  - integration-test--execution--14
  - integration-test--execution--15
  - integration-test--execution--16
  - integration-test--execution--17
  - integration-test--execution--18
  - integration-test--execution--19
  - integration-test--execution--20
  - integration-test--execution--21
  - delivery 

before_script:
  - export CI_AUTO_TAGGING_IS_ENABLED="true"
  - export CI_AUTO_TAGGING_MESSAGE="GitLab CI continuous delivery auto tagging job"
  - export CI_AUTO_TAGGING_TAG_NAME="deliverable"
  - export CI_GIT_SERVER_URL="git.talsen.team"
  - export CI_GIT_SERVER_USER_GIT="git"
  - export CI_GIT_SERVER_SSH_PORT="30222"

build-test-dotnet-application:
  stage: 'build-test'
  tags:
    - 'dotnet-core'
    - 'build'
  except:
    refs:
      - deliverable
  script:    
    - /bin/bash bash-gitlab-ci/run-tests.sh
    - /bin/bash bash-gitlab-ci/run-sonarscanner.sh
    
publish-dotnet-application:
  stage: 'publish'
  tags:
    - 'dotnet-core'
    - 'build'
  artifacts:
    paths:
      -  'publish'
  except:
    refs:
      - deliverable
  script:
    - cd src/oppo-terminal
    - dotnet publish -c Release -o ../../publish

build-debian-installer:
  dependencies: 
    - 'publish-dotnet-application'
  artifacts:
    paths:
      -  'installer/oppo-terminal.deb'
  stage: 'installer'
  tags:
    - 'debian-installer'
  except:
    refs:
      - deliverable
  script:    
    - /bin/bash bash-gitlab-ci/run-build-installer.sh

prepare-integration-test:
  dependencies: 
    - 'build-debian-installer'
  stage: 'integration-test'
  tags:
    - 'dotnet-core'
    - 'integration-test'
  except:
    refs:
      - deliverable
  before_script:
    - /bin/bash bash-gitlab-ci/run-installer.sh
  script:
    - echo "Preparation done ..."

run-integration-test--hello:
  extends: prepare-integration-test
  stage: 'integration-test--execution--1'
  script:
    - /bin/bash bash-gitlab-ci/integration-tests/run-hello--success.sh

run-integration-test--new-sln--success:
  extends: prepare-integration-test
  stage: 'integration-test--execution--2'
  script:
    - /bin/bash bash-gitlab-ci/integration-tests/run-new-sln--success.sh -

run-integration-test--new-sln-verbose--success:
  extends: prepare-integration-test
  stage: 'integration-test--execution--3'
  script:
    - /bin/bash bash-gitlab-ci/integration-tests/run-new-sln--success.sh verbose

run-integration-test--new-opcuaapp--success:
  extends: prepare-integration-test
  stage: 'integration-test--execution--4'
  script:
    - /bin/bash bash-gitlab-ci/integration-tests/run-new-opcuaapp--success.sh -

run-integration-test--new-opcuaapp-verbose--success:
  extends: prepare-integration-test
  stage: 'integration-test--execution--5'
  script:
    - /bin/bash bash-gitlab-ci/integration-tests/run-new-opcuaapp--success.sh verbose

run-integration-test--build-opcuaapp--success:
  extends: prepare-integration-test
  stage: 'integration-test--execution--6'
  script:
    - /bin/bash bash-gitlab-ci/integration-tests/run-build-opcuaapp--success.sh -

run-integration-test--build-opcuaapp-verbose--success:
  extends: prepare-integration-test
  stage: 'integration-test--execution--7'
  script:
    - /bin/bash bash-gitlab-ci/integration-tests/run-build-opcuaapp--success.sh verbose

run-integration-test--help--success:
  extends: prepare-integration-test
  stage: 'integration-test--execution--8'
  script:
    - /bin/bash bash-gitlab-ci/integration-tests/run-help--success.sh -
    
run-integration-test--publish-opcuaapp--success:
  extends: prepare-integration-test
  stage: 'integration-test--execution--9'
  script:
    - /bin/bash bash-gitlab-ci/integration-tests/run-publish-opcuaapp--success.sh -

run-integration-test--publish-opcuaapp-verbose--success:
  extends: prepare-integration-test
  stage: 'integration-test--execution--10'
  script:
    - /bin/bash bash-gitlab-ci/integration-tests/run-publish-opcuaapp--success.sh verbose

run-integration-test--build-help--success:
  extends: prepare-integration-test
  stage: 'integration-test--execution--11'
  script:
    - /bin/bash bash-gitlab-ci/integration-tests/run-build-help--success.sh -

run-integration-test--build-help-verbose--success:
  extends: prepare-integration-test
  stage: 'integration-test--execution--12'
  script:
    - /bin/bash bash-gitlab-ci/integration-tests/run-build-help--success.sh verbose    
    
run-integration-test--version--success:
  extends: prepare-integration-test
  stage: 'integration-test--execution--13'
  script:
    - /bin/bash bash-gitlab-ci/integration-tests/run-version--success.sh -
    
run-integration-test--publish-help--success:
  extends: prepare-integration-test
  stage: 'integration-test--execution--14'
  script:
    - /bin/bash bash-gitlab-ci/integration-tests/run-publish-help--success.sh -

run-integration-test--publish-help-verbose--success:
  extends: prepare-integration-test
  stage: 'integration-test--execution--15'
  script:
    - /bin/bash bash-gitlab-ci/integration-tests/run-publish-help--success.sh verbose    
    
run-integration-test--new-help--success:
  extends: prepare-integration-test
  stage: 'integration-test--execution--16'
  script:
    - /bin/bash bash-gitlab-ci/integration-tests/run-new-help--success.sh -

run-integration-test--new-help-verbose--success:
  extends: prepare-integration-test
  stage: 'integration-test--execution--17'
  script:
    - /bin/bash bash-gitlab-ci/integration-tests/run-new-help--success.sh verbose    
    
run-integration-test--new-opcuaapp--failure:
  extends: prepare-integration-test
  stage: 'integration-test--execution--18'
  script:
    - /bin/bash bash-gitlab-ci/integration-tests/run-new-opcuaapp--failure.sh
    
run-integration-test--new-sln--failure:
  extends: prepare-integration-test
  stage: 'integration-test--execution--19'
  script:
    - /bin/bash bash-gitlab-ci/integration-tests/run-new-sln--failure.sh

run-integration-test--publish-opcuaapp--failure:
  extends: prepare-integration-test
  stage: 'integration-test--execution--20'
  script:
    - /bin/bash bash-gitlab-ci/integration-tests/run-publish-opcuaapp--failure.sh

run-integration-test--build-opcuaapp--failure:
  extends: prepare-integration-test
  stage: 'integration-test--execution--21'
  script:
    - /bin/bash bash-gitlab-ci/integration-tests/run-build-opcuaapp--failure.sh
    
mark-repository-as-deliverable:
  stage: 'delivery'
  tags:
    - 'set-delivery-tag'
  except:
    refs:
      - deliverable
  script:
    - echo "Mark repository as deliverable..."
    - /bin/bash /utility/auto-tagging/run-auto-tagging.sh
